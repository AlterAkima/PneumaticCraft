[image{200, 20, 0.44,igwmod:textures/droneInterface.png}]
The Drone Interface is a block that only gets added when ComputerCraft is installed. It's a peripheral that's used to communicate with Drones. To do so, program a Drone with a ComputerCraft puzzle piece. You can combine it with other puzzle pieces. When the Drone gets to the ComputerCraft piece, it'll try to connect to an available Drone Interface located within the selected area. Available, because a Drone Interface can connect to one Drone at a time only. The following functions apply:
-isConnectedToDrone() - Returns true if a Drone has connected with this Drone Interface (when the Drone's program has arrived at the ComputerCraft piece and made a connection).
-getDronePressure() - Returns the pressure of the connected Drone.
-getDronePosition() - Returns a table of 3 double values containing the x,y and z position respectively of the Drone.
-exitPiece() - Stops the ComputerCraft piece in the Drone, and allows the Drone's program to proceed to the next puzzle piece.
-getAllActions() - Returns a table of all the current selectable actions (like 'dig' or 'place').
-setBlockOrder(<closest/highToLow/lowToHigh>) - Sets the place/dig order of the Drone.
-getAreaTypes() - Returns a table of all the possible area types (filled, frame, sphere, ..).
-addArea(<x>,<y>,<z>), addArea(<x1>,<y1>,<z1>,<x2>,<y2>,<z2>,<areaType>) - Adds an area to the current stored area of the Drone. When using the latter method, x1, y1, and z1, represent the first point (which would be the first GPS Tool normally), and x2, y2, and z2 represent the second point.
-removeArea(<x>,<y>,<z>), removeArea(<x1>,<y1>,<z1>,<x2>,<y2>,<z2>,<areaType>) - Removes an area from the current stored area (like blacklisting).
-clearArea() - Clears the current stored area.
-showArea() - Will show the current stored area using the area renderer you are used to.
-hideArea() - Will stop showing the area stored in the Drone.
-addWhitelistItemFilter(<item/block name>, <damage/metadata>, <useMetadata>, <useNBT>, <useOreDictionary>, <useModSimilarity>) - Acts as you've put a Item Filter piece on the right of a piece (making it whitelisting). The item/block name is in Minecraft format, i.e. "minecraft:stone", or "pneumaticcraft:pressureTube". The 'useXXX' are all booleans that determine what filters will be used (same functionality as the check boxes in the Item Filter puzzle piece).
-addBlacklistItemFilter(<item/block name>, <damage/metadata>, <useMetadata>, <useNBT>, <useOreDictionary>, <useModSimilarity>) - Like the addWhitelistItemFilter(...), but to blacklist items.
-clearWhitelistItemFilter() - Clears all the whitelisted item filters stored.
-clearBlacklistItemFilter() - Clears all the blacklisted item filters stored.
-addWhitelistText(<text>) - Adds a text to the whitelisted texts. Used to specify a filter for the Entity Attack action for example.
-addBlacklistText(<text>) - Adds a text to the blacklisted texts. Used to specify a filter for the Entity Attack action for example.
-clearWhitelistText() - Clears the stored whitelisted texts.
-clearBlacklistText() - Clears the stored blacklisted texts.
-setSide(<side>, <accessible>) - Sets the specific side to be accessible or not. Used in the Inventory Im- and Export actions to set which side of the inventory the Drone can access. It is also used for the Place action to determine how to place the block.
-setSides(<down>, <up>, <north>, <south>, <east>, <west>) - Same as above, now in one function to set all sides at once (6x boolean).
-setAction(<action>) - String that represents the action. This should be one of the actions returned by getAllActions().
-abortAction() - Stops the current running action.
-isActionDone() - Returns true if the current action is done (goto has arrived at the target location, inventory import can't import anymore, dig has dug every possible block, ..).
-forgetTarget() - When the Drone was targeting an Entity (in the Entity Attack program), this will stop attacking that target.

Anytime the Drone gets updated a ring will be shot out of the Drone Interface, indicating it was successful. The color of the ring is the same color as the puzzle piece it was associated with.